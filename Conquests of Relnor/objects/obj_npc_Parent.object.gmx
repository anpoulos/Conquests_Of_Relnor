<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Lifeform_Parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NPC

event_inherited();

myCollisionTurn = false;
isDefensive = true;
everyOther = false;
walkThroughNPCs = false;
squareX = 0;
squareY = 0;
commandedMoveTo = false;
isAggressive = false;
originX = x;
originY = y;
wanderRadius = 1000;
wanderDistance = 50;
oldWanderRadius = wanderRadius;
oldWanderDistance = wanderDistance;

//override
self.reach = 25;
self.sight = 50;

self.directions[RIGHT] = 0;
self.directions[LEFT] = 0;
self.directions[DOWN] = 0;
self.directions[UP] = 0;

self.attackState = scr_npc_states_attack_state;
self.moveInputs = scr_npc_set_directions_by_offset;
self.moveState = scr_npc_states_move_state;
self.state = scr_npc_choose_next_state;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Lifeform_Parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision

if(self.isAggressive || self.isDefensive){
    if(other.allegiance != self.allegiance){
        scr_npc_auto_retaliate(other);
        return true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Walk Around Other Lifeform
    

if(self.state != self.moveState || self.target != noone){
    other.myCollisionTurn = true;
    return false;
}

if(!myCollisionTurn){
    other.myCollisionTurn = true;
    return false;
}

myCollisionTurn = false;

var _object360RelativeToMe = point_direction(x,y, other.x, other.y);
var _directionRelativeToMe4Way = round(_object360RelativeToMe/90);
if(_directionRelativeToMe4Way &gt; 3){
    _directionRelativeToMe4Way = RIGHT;
}

var _face4Way = self.face4Way;

if(self.face4Way == _directionRelativeToMe4Way){
    var _rand = irandom_range(0,1);
    if(_rand == 0){
        _rand = -1;
    }
    var _d = reach;
    switch(self.face4Way){
        case DOWN:
            path_change_point(path, pathIndex, x+_d*_rand, y, self.currentMoveSpeed);
            //scr_obj_move_phy(self, _d*_rand, -_d);
        case UP:
            path_change_point(path, pathIndex, x+_d*_rand, y, self.currentMoveSpeed);
            //scr_obj_move_phy(self, _d*_rand, _d);
        break;
        case RIGHT:
            path_change_point(path, pathIndex, x, y+_d*_rand, self.currentMoveSpeed);
            //scr_obj_move_phy(self, -_d, _d*_rand);
        case LEFT:
            path_change_point(path, pathIndex, x, y+_d*_rand, self.currentMoveSpeed);
            //scr_obj_move_phy(self, _d, _d*_rand);
        break;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation End Checks

switch(state){
    case attackState:
        target = noone;
        attacked = false;
        scr_npc_choose_next_state();
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
